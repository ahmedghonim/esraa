generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id        String    @id @default(cuid())
  fullname  String
  password  String
  email     String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  account   Account[]
}

model Account {
  id                 String    @id @default(cuid())
  userId             String
  providerType       String
  providerId         String
  providerAccountId  String
  refreshToken       String?
  accesstockn        String?
  accesstocknExpires DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  user               User      @relation(fields: [userId], references: [id])

  @@unique([providerId, providerAccountId])
}

model OtpCode {
  id  Int    @id @default(autoincrement())
  otp String
}

model HeroSection {
  id          Int       @id @default(autoincrement())
  title       String
  description String
  products    Product[]
  mainProduct Int
  thumbnail   String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Product {
  id              Int              @id @default(autoincrement())
  name            String
  description     String
  images          String[]
  thumbnail       String
  price           Float
  newPrice        Float?
  newArrival      Boolean          @default(false)
  slug            String
  categories      Category[]       @relation("ProductCategories")
  collection      Collection?      @relation(fields: [collectionId], references: [id])
  collectionId    Int?
  relatedProducts Product[]        @relation("RelatedProducts")
  parentProducts  Product[]        @relation("RelatedProducts")
  HeroSection     HeroSection?     @relation(fields: [heroSectionId], references: [id])
  heroSectionId   Int?
  ProductVariant  ProductVariant[]

  OrderProduct OrderProduct[] // Remove onDelete from here

  @@index([name])
}

model OrderProduct {
  id        Int     @id @default(autoincrement())
  orderId   Int
  productId Int
  quantity  Int     @default(1)
  size      String
  color     String
  order     Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade) // Keep onDelete here
}

model Color {
  id             Int              @id @default(autoincrement())
  name           String
  hexCode        String
  ProductVariant ProductVariant[]

  @@unique([name])
}

model Category {
  id          Int       @id @default(autoincrement())
  name        String
  image       String
  topCategory Boolean   @default(false)
  products    Product[] @relation("ProductCategories")

  @@unique([name])
}

model Size {
  id             Int              @id @default(autoincrement())
  name           String
  ProductVariant ProductVariant[]

  @@unique([name])
}

model ProductVariant {
  id        Int     @id @default(autoincrement())
  productId Int
  colorId   Int
  sizeId    Int
  stock     Int
  product   Product @relation(fields: [productId], references: [id])
  color     Color   @relation(fields: [colorId], references: [id])
  size      Size    @relation(fields: [sizeId], references: [id])

  @@unique([productId, colorId, sizeId])
}

model Collection {
  id       Int       @id @default(autoincrement())
  name     String
  products Product[]

  @@unique([name])
}

model Customer {
  id      Int     @id @default(autoincrement())
  name    String
  phone   String  @unique
  address String
  email   String? @unique
  orders  Order[]
}

model Order {
  id         Int            @id @default(autoincrement())
  orderDate  DateTime       @default(now())
  customerId Int
  delivered  Boolean        @default(false)
  customer   Customer       @relation(fields: [customerId], references: [id])
  products   OrderProduct[]

  @@index([customerId])
}

model WhatTheSay {
  id        Int      @id @default(autoincrement())
  name      String
  message   String
  image     String
  hidden    Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model SaleSlider {
  id          Int      @id @default(autoincrement())
  description String
  image       String
  hidden      Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Contact {
  id        Int      @id @default(autoincrement())
  name      String
  phone     String
  message   String
  isRead    Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model OurInfo {
  id        Int      @id @default(autoincrement())
  phone     String
  email     String
  whatsApp  String
  facebook  String?
  instagram String?
  x         String?
  tiktok    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Shipping {
  id        Int      @id @default(autoincrement())
  city      String
  price     Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
